import { useAtom } from "jotai";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { userIdAtom } from ".";
import { trpc } from "../utils/trpc";

const WaitingPage: NextPage = () => {
  const [userId] = useAtom(userIdAtom);
  const findUserQuery = trpc.useQuery(["users.findMatch", { userId }], {
    refetchOnWindowFocus: false,
    cacheTime: 0,
    staleTime: 0,
  });
  const getMatchQuery = trpc.useQuery(["users.getMatch", { userId }], {
    refetchOnWindowFocus: false,
    cacheTime: 0,
    staleTime: 0,
  });
  const setStatusMutation = trpc.useMutation("users.setStatus");

  const router = useRouter();

  useEffect(() => {
    if (!userId) return;
    setStatusMutation.mutate({ userId, status: "waiting" });
  }, []);

  // app first loads, find a user to match with
  useEffect(() => {
    if (!findUserQuery.data) return;
    const match = findUserQuery.data;
    router.push(`/chatting/${match.id}`);
  }, [findUserQuery.data, router]);

  // interval fires, someone matched with us
  useEffect(() => {
    const match = getMatchQuery.data;
    if (match) {
      router.push(`/chatting/${match.id}`);
    }
  }, [getMatchQuery.data, router]);

  useEffect(() => {
    const interval = setInterval(() => {
      getMatchQuery.refetch();
    }, 5000);

    return () => {
      clearInterval(interval);
    };
  }, [getMatchQuery]);

  return (
    <>
      <Head>
        <title>Waiting for Users</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col gap-6 items-center justify-center min-h-screen p-4">
        <h3 className="text-xl">Waiting for Users to Connect With...</h3>
      </main>
    </>
  );
};

export default WaitingPage;
